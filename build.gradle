plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.11.0'
    id 'io.codearte.nexus-staging' version '0.12.0'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'groovy'
    id 'maven'
    id 'maven-publish'
}

group 'tech.harmonysoft'
version = '1.8'

repositories {
    mavenCentral()
}

gradlePlugin {
    plugins {
        gradleDist {
            id = 'tech.harmonysoft.oss.custom-gradle-dist-plugin'
            implementationClass = 'tech.harmonysoft.oss.gradle.dist.CustomGradleDistributionPlugin'
            displayName = 'Custom Gradle Wrapper construction plugin'
            description = 'Helps setting up custom Gradle wrapper construction'
        }
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
}

pluginBundle {
    website = 'http://gradle-dist.oss.harmonysoft.tech/'
    vcsUrl = 'https://github.com/denis-zhdanov/custom-gradle-dist-gradle-plugin'
    tags = ['wrapper']
}

bintray {
    user = project.hasProperty('bintrayUser') ? bintrayUser : ''
    key = project.hasProperty('bintrayApiKey') ? bintrayApiKey : ''
    publications = ['MyPublication']

    pkg {

        repo = 'harmonysoft.tech'
        name = archivesBaseName
        licenses = ['MIT']
        vcsUrl = 'https://github.com/denis-zhdanov/custom-gradle-dist-gradle-plugin.git'

        version {
            name = version
            released  = new Date()
        }
    }
}

def shouldSign = !System.getenv('CI_ENV') && project.hasProperty('signing.keyId')
if (shouldSign) {
    apply plugin: 'signing'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

if (shouldSign) {
    signing {
        sign configurations.archives
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            if (!System.getenv('CI_ENV')) {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: project.hasProperty('ossrhUsername') ? ossrhUsername : '',
                               password: project.hasProperty('ossrhPassword') ? ossrhPassword : '')
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: project.hasProperty('ossrhUsername') ? ossrhUsername : '',
                               password: project.hasProperty('ossrhPassword') ? ossrhPassword : '')
            }

            pom.project {
                packaging 'jar'

                name 'Custom Gradle Distribution'
                description 'A Gradle plugin which facilitates custom Gradle distributions creation'
                url 'http://traute.oss.harmonysoft.tech/custom-gradle-dist-gradle-plugin'
                
                scm {
                    connection 'scm:git:git://github.com/denis-zhdanov/custom-gradle-dist-gradle-plugin.git'
                    developerConnection 'scm:git:git://github.com/denis-zhdanov/custom-gradle-dist-gradle-plugin.git'
                    url 'https://github.com/denis-zhdanov/custom-gradle-dist-gradle-plugin'
                }

                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'http://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'denis'
                        name 'Denis Zhdanov'
                        email 'denzhdanov@gmail.com'
                    }
                }
            }
        }
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'tech.harmonysoft'
            artifactId archivesBaseName
            version version
        }
    }
}